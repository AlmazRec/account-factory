@import 'tailwindcss';

@custom-variant dark (&:where(.dark, .dark *));

@theme {
    --color-header: rgba(255, 255, 255, 0.2);
    --color-header-border: rgba(255, 255, 255, 0.7);

    --color-card-bg: rgba(255, 255, 255, 0.7);
    --color-card-border: rgba(255, 255, 255, 0.7);



    --color-footer: #161719;
    --color-foooter-text: rgba(107, 114, 128, 1);
    --color-foooter-links: rgba(209, 213, 219, 1);
}

@variant dark {
    --color-header: rgba(12, 24, 60, 0.25);

    --color-footer: #0F0F10;
    --color-foooter-text: rgba(156, 163, 175, 1);
    --color-foooter-links: rgba(209, 213, 219, 0.8);
}

body {
    font-family: 'Inter', sans-serif;
    background-color: #f8f9fa;
}
input[type=number]::-webkit-inner-spin-button,
input[type=number]::-webkit-outer-spin-button {
    -webkit-appearance: none;
    margin: 0;
}
input[type=number] {
    -moz-appearance: textfield;
}

/* Стиль для предотвращения прокрутки тела при открытом мобильном меню */
body.no-scroll {
    overflow: hidden;
}

/*
   Для мобильного меню:
   Эти стили не могут быть полностью перенесены в Tailwind классы на этом элементе,
   поскольку они описывают начальное/конечное состояние для JS-переключения.
   Если вы используете CSS-фреймворки типа Alpine.js или React/Vue
   с динамическими классами, то это можно будет сделать полностью декларативно.
   В чистом JS, как сейчас, это самый читаемый и эффективный способ.
*/
#mobile-menu:not(.is-open) {
    transform: translateY(-100%);
    opacity: 0;
    pointer-events: none;
}

#mobile-menu.is-open {
    transform: translateY(0);
    opacity: 1;
    pointer-events: auto;
}

body::before {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 1200px;
    height: 1500px;
    background: linear-gradient(90deg,
    rgba(255, 140, 80, 0.7) 1.37%,
    rgba(204, 0, 180, 0.7) 34.7%,
    rgba(80, 160, 255, 0.7) 68.03%,
    rgba(0, 100, 220, 0.7) 101.37%);

    background-size: 300% 300%;
    background-position: 0 0;
    backdrop-filter: blur(457.5px);
    filter: blur(90px);
    animation: gradient 15s infinite linear;
    opacity: 0.7;
    z-index: -1;
    pointer-events: none;
    will-change: transform, filter, opacity;
    border-radius: 20px;
}

@keyframes gradient {
    0% {
        background-position: 0% 0%;
    }

    50% {
        background-position: 100% 100%;
    }

    100% {
        background-position: 0% 0%;
    }
}